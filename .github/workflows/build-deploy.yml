name: Build, Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18' # Or your specific Node.js version (e.g., '16', '20')

    # Install backend and/or frontend dependencies
    # Assuming your package.json is in the root. Adjust if it's in a subfolder (e.g., 'backend/package.json')
    - name: Install Dependencies
      run: npm ci # 'npm ci' is preferred for CI/CD as it's faster and more reliable than 'npm install'

    - name: Build Docker image
      # Correctly reference DOCKER_HUB_USERNAME secret
      run: 
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/fss-retail-app-kubernetes:${{ github.sha }} .
        echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
#change in image name
    - name: Login to Docker Hub
      # Correctly reference DOCKER_HUB_TOKEN and DOCKER_HUB_USERNAME secrets
      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

    - name: Push Docker image
      # Correctly reference DOCKER_HUB_USERNAME secret
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/fss-retail-app-kubernetes:${{ env.IMAGE_TAG }}
    
   # - name: SonarQube Scan
    #  uses: SonarSource/sonarqube-scan-action@master
     # env:
        #SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
   #   with:
      #  args: >
       #   -Dsonar.projectKey=my-app
        #  -Dsonar.projectName=MyApp
          #-Dsonar.java.binaries=target/classes
          
    #- name: Update Helm Chart
    #  uses: actions/github-script@v6
     # with:
      #  script: |
      #    await github.rest.actions.createWorkflowDispatch({
       #     owner: 'YOUR-ORG',
        #    repo: 'infra-repo',
         #   workflow_id: 'update-helm.yaml',
         #   ref: 'main',
          #  inputs: {
             # image_tag: process.env.IMAGE_TAG,
            #  build_number: process.env.GITHUB_RUN_NUMBER
          #  }
        #  })
